- hosts: all
  become: true
  vars_prompt:
    - name: azure_pipeline_access_token
      prompt: Enter azure pipeline personal access token
      private: true
    - name: reconfigure_agent
      prompt: Reconfigure and re-run agent service?
      default: false
  vars:
    common:
      ubuntu_release: focal
      agent_username: azureuser
    agent:
      name: distransAgent
      work_folder: _work
      download_url: https://vstsagentpackage.azureedge.net/agent/3.218.0/vsts-agent-linux-x64-3.218.0.tar.gz
      agent_dir_name: distransAgent
      pool:
        server_url: https://dev.azure.com/musalaDevOpsAcademy
    helm:
      binary_url: https://get.helm.sh/helm-v3.11.3-linux-amd64.tar.gz
    dotnet:
      version: "5.0"

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu "{{ common.ubuntu_release }}" stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Add {{ common.agent_username }} to docker group
      become: true
      shell:
        cmd: usermod -aG docker {{ common.agent_username }}

    - name: Create agent directory {{ agent.agent_dir_name }} on user's {{ common.agent_username }} home directory
      file: state=directory path=/home/{{ common.agent_username }}/{{ agent.agent_dir_name }}

    - name: Add Google Cloud GPG public signing key for kubectl packgage
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes Repository
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: Update apt and install kubectl
      apt:
        name: kubectl
        state: latest
        update_cache: true

    - name: Install Microsoft .NET package repository
      apt:
        deb: https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb

    - name: Update apt and install .Net SDK and Runtime
      apt:
        pkg:
          - dotnet-sdk-{{ dotnet.version }}
          - dotnet-runtime-{{ dotnet.version }}
          - aspnetcore-runtime-{{ dotnet.version }}
        state: latest
        update_cache: true

    - name: Download and unarchive Helm binary
      unarchive:
        src: "{{ helm.binary_url }}"
        dest: /home/{{ common.agent_username }}
        remote_src: yes

    - name: Move helm executable bin folder
      command: mv /home/{{ common.agent_username }}/linux-amd64/helm /usr/bin

    - name: Download and unarchive Azure Pipeline Agent
      unarchive:
        src: "{{ agent.download_url }}"
        dest: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}
        remote_src: yes

    - name: Create agent work directory {{ agent.agent_dir_name }}/{{ agent.work_folder }} on user's {{ common.agent_username }} home directory
      file: state=directory path=/home/{{ common.agent_username }}/{{ agent.agent_dir_name }}/{{ agent.work_folder }}

    - name: Recursively change ownership of agent scripts directory
      file:
        path: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}
        state: directory
        recurse: yes
        owner: "{{ common.agent_username }}"
        group: "{{ common.agent_username }}"

    - name: Stop azure agent service
      become: true
      when: reconfigure_agent | bool
      shell:
        cmd: ./svc.sh stop
        chdir: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}

    - name: Stop azure agent service
      become: true
      when: reconfigure_agent | bool
      shell:
        cmd: ./svc.sh uninstall
        chdir: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}

    - name: Remove Azure agent config
      become: false
      become_user: "{{ common.agent_username }}"
      when: reconfigure_agent | bool
      expect:
        command: ./config.sh remove
        chdir: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}
        responses:
          '(.*)Enter authentication type(.*)': "PAT"
          '(.*)Enter personal access token(.*)': "{{ azure_pipeline_access_token }}"

    - name: Config Azure agent
      become: false
      become_user: "{{ common.agent_username }}"
      expect:
        command: ./config.sh
        chdir: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}
        responses:
          '(.*)press enter for N(.*)': "Y"
          '(.*)Enter server URL(.*)': "{{ agent.pool.server_url }}"
          '(.*)press enter for PAT(.*)': "PAT"
          '(.*)Enter personal access token(.*)': "{{ azure_pipeline_access_token }}"
          '(.*)Enter agent pool(.*)': "default"
          '(.*)Enter agent name(.*)': "{{ agent.name }}"
          '(.*)Enter work folder(.*)': "{{ agent.work_folder }}"

    - name: Install azure agent service
      become: true
      shell:
        cmd: ./svc.sh install {{ common.agent_username }}
        chdir: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}

    - name: Run azure agent service
      become: true
      shell:
        cmd: ./svc.sh start
        chdir: /home/{{ common.agent_username }}/{{ agent.agent_dir_name }}
          

